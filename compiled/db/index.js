'use strict';

var Sequelize = require('sequelize');
// var Event = require('./models/event.js');
// var ItemList = require('./models/itemlist.js');


var sequelize = new Sequelize('database', 'username', null, { dialect: 'sqlite', storage: './db.sqlite' });

var EventTable = Sequelize.define('event', {
  name: {
    type: Sequelize.STRING
  },
  where: {
    type: Sequelize.STRING
  },
  when: {
    type: Sequelize.STRING
  }
});

var ItemListTable = sequelize.define('itemlist', {
  item: {
    type: Sequelize.STRING
  },
  owner: {
    type: Sequelize.STRING
  },
  cost: {
    type: Sequelize.STRING
  }
});

// test the connection, works!
sequelize.authenticate().then(function (err) {
  console.log('Connection has been established successfully.');
}).catch(function (err) {
  console.log('Unable to connect to the database:', err);
});

module.exports = EventTable;
module.exports = ItemListTable;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2RiL2luZGV4LmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJkaWFsZWN0Iiwic3RvcmFnZSIsIkV2ZW50VGFibGUiLCJkZWZpbmUiLCJuYW1lIiwidHlwZSIsIlNUUklORyIsIndoZXJlIiwid2hlbiIsIkl0ZW1MaXN0VGFibGUiLCJpdGVtIiwib3duZXIiLCJjb3N0IiwiYXV0aGVudGljYXRlIiwidGhlbiIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJjYXRjaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsWUFBWUMsUUFBUSxXQUFSLENBQWhCO0FBQ0E7QUFDQTs7O0FBR0EsSUFBSUMsWUFBWSxJQUFJRixTQUFKLENBQWMsVUFBZCxFQUEwQixVQUExQixFQUFzQyxJQUF0QyxFQUNkLEVBQUVHLFNBQVMsUUFBWCxFQUFxQkMsU0FBUyxhQUE5QixFQURjLENBQWhCOztBQUdBLElBQUlDLGFBQWFMLFVBQVVNLE1BQVYsQ0FBaUIsT0FBakIsRUFBMEI7QUFDekNDLFFBQU07QUFDSkMsVUFBTVIsVUFBVVM7QUFEWixHQURtQztBQUl6Q0MsU0FBTztBQUNMRixVQUFNUixVQUFVUztBQURYLEdBSmtDO0FBT3pDRSxRQUFNO0FBQ0pILFVBQU1SLFVBQVVTO0FBRFo7QUFQbUMsQ0FBMUIsQ0FBakI7O0FBWUEsSUFBSUcsZ0JBQWdCVixVQUFVSSxNQUFWLENBQWlCLFVBQWpCLEVBQTZCO0FBQy9DTyxRQUFNO0FBQ0pMLFVBQU1SLFVBQVVTO0FBRFosR0FEeUM7QUFJL0NLLFNBQU87QUFDTE4sVUFBTVIsVUFBVVM7QUFEWCxHQUp3QztBQU8vQ00sUUFBTTtBQUNKUCxVQUFNUixVQUFVUztBQURaO0FBUHlDLENBQTdCLENBQXBCOztBQVlBO0FBQ0FQLFVBQ0djLFlBREgsR0FFR0MsSUFGSCxDQUVRLFVBQVNDLEdBQVQsRUFBYztBQUNsQkMsVUFBUUMsR0FBUixDQUFZLCtDQUFaO0FBQ0QsQ0FKSCxFQUtHQyxLQUxILENBS1MsVUFBVUgsR0FBVixFQUFlO0FBQ3BCQyxVQUFRQyxHQUFSLENBQVksb0NBQVosRUFBa0RGLEdBQWxEO0FBQ0QsQ0FQSDs7QUFTQUksT0FBT0MsT0FBUCxHQUFpQmxCLFVBQWpCO0FBQ0FpQixPQUFPQyxPQUFQLEdBQWlCWCxhQUFqQiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcbi8vIHZhciBFdmVudCA9IHJlcXVpcmUoJy4vbW9kZWxzL2V2ZW50LmpzJyk7XG4vLyB2YXIgSXRlbUxpc3QgPSByZXF1aXJlKCcuL21vZGVscy9pdGVtbGlzdC5qcycpO1xuXG5cbnZhciBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKCdkYXRhYmFzZScsICd1c2VybmFtZScsIG51bGwsIFxuICB7IGRpYWxlY3Q6ICdzcWxpdGUnLCBzdG9yYWdlOiAnLi9kYi5zcWxpdGUnIH0pO1xuXG52YXIgRXZlbnRUYWJsZSA9IFNlcXVlbGl6ZS5kZWZpbmUoJ2V2ZW50Jywge1xuICBuYW1lOiB7XG4gICAgdHlwZTogU2VxdWVsaXplLlNUUklOR1xuICB9LFxuICB3aGVyZToge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgfSxcbiAgd2hlbjoge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgfVxufSk7XG5cbnZhciBJdGVtTGlzdFRhYmxlID0gc2VxdWVsaXplLmRlZmluZSgnaXRlbWxpc3QnLCB7XG4gIGl0ZW06IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HXG4gIH0sXG4gIG93bmVyOiB7XG4gICAgdHlwZTogU2VxdWVsaXplLlNUUklOR1xuICB9LFxuICBjb3N0OiB7XG4gICAgdHlwZTogU2VxdWVsaXplLlNUUklOR1xuICB9XG59KTtcblxuLy8gdGVzdCB0aGUgY29ubmVjdGlvbiwgd29ya3MhXG5zZXF1ZWxpemVcbiAgLmF1dGhlbnRpY2F0ZSgpXG4gIC50aGVuKGZ1bmN0aW9uKGVycikge1xuICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uIGhhcyBiZWVuIGVzdGFibGlzaGVkIHN1Y2Nlc3NmdWxseS4nKTtcbiAgfSlcbiAgLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZygnVW5hYmxlIHRvIGNvbm5lY3QgdG8gdGhlIGRhdGFiYXNlOicsIGVycik7XG4gIH0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50VGFibGU7XG5tb2R1bGUuZXhwb3J0cyA9IEl0ZW1MaXN0VGFibGU7Il19